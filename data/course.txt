**День 1: Основи мови Python та змінні**
- Ознайомлення з інтерпретатором Python, синтаксисом та структурою мови.
- Вивчення понять змінних, типів даних (цілі числа, числа з плаваючою комою, рядки) та операторів.
- Як створювати та присвоювати значення змінним.

Практика:
1. Яке значення буде надруковано після виконання коду?
   ```python
   a = 10
   b = 5
   c = a + b
   print(c)
   ```
   а) 15  б) 10 в) 5

2. Який тип даних має змінна після виконання коду?
   ```python
   message = "Привіт, світе!"
   ```
   а) Цілий б) Рядок в) Логічний

3. Яке значення буде надруковано, якщо виконати код?
   ```python
   num = 3.5
   result = num * 2
   print(result)
   ```
   а) 7.0  б) 3.5 в) 2

---
**День 2: Оператори, умови та цикли**
- Вивчення арифметичних, порівняння та логічних операторів.
- Розуміння умовних операторів (if, elif, else) та їх використання.
- Вступ до циклів: for та while.

Практика:
1. Який результат буде після виконання коду?
   ```python
   x = 10
   if x > 5:
       print("Більше 5")
   else:
       print("Менше або дорівнює 5")
   ```
   а) Більше 5  б) Менше або дорівнює 5 в) Нічого не надрукується

2. Яка змінна буде надрукована?
   ```python
   fruits = ["яблуко", "банан", "груша"]
   for fruit in fruits:
       print(fruit)
   ```
   а) яблуко б) банан в) груша

3. Скільки разів буде надруковано "Hello"?
   ```python
   i = 0
   while i < 3:
       print("Hello")
       i += 1
   ```
   а) 2 рази  б) 3 рази в) 4 рази

---
**День 3: Списки, кортежі та словники**
- Розуміння структур даних: списки, кортежі та словники.
- Операції зі списками: додавання, видалення, сортування та пошук елементів.
- Використання кортежів та словників для зберігання та обробки даних.

Практика:
1. Який елемент списку буде видалено?
   ```python
   my_list = [5, 10, 15, 20]
   my_list.remove(15)
   ```
   а) 5  б) 10 в) 20

2. Яке значення має змінна після виконання коду?
   ```python
   my_tuple = (2, 4, 6)
   sum_tuple = sum(my_tuple)
   ```
   а) 12  б) 24 в) 6

3. Яке значення ключа "name" у словнику?
   ```python
   person = {"age": 25, "name": "Саша"}
   ```
   а) 25  б) Саша в) Нічого

---
**День 4: Функції та модулі**
- Створення та використання функцій, параметри та повернення значень.
- Вивчення вбудованих функцій та модулів Python.
- Імпорт та використання модулів для розширення можливостей коду.

Практика:
1. Яке значення буде повернуто функцією?
   ```python
   def add_numbers(a, b):
       return a + b
   result = add_numbers(3, 4)
   ```
   а) 7  б) 3 в) 4

2. Яке значення буде надруковано?
   ```python
   import math
   radius = 5
   area = math.pi * radius ** 2
   print(area)
   ```
   а) 3.14  б) 78.54 в) 25

---
**День 5: Обробка помилок та файли**
- Обробка винятків та помилок у Python.
- Використання блоків try-except для обробки помилок.
- Робота з файлами: читання та запис даних у файли.

Практика:
1. Яка помилка буде оброблена блоком except?
   ```python
   try:
       num = 10 / 0
   except ZeroDivisionError:
       print("Не можна ділити на нуль")
   ```
   а) Синтаксична помилка  б) ZeroDivisionError в) Ніякої помилки

2. Який вміст файлу після виконання коду?
   ```python
   file = open("test.txt", "w")
   file.write("Це тестовий текст")
   file.close()
   ```
   а) Файл створено та записано текст б) Файл не створено в) Помилка запису

Пам'ятай, що це лише короткий план, і для глибшого розуміння мови Python рекомендується продовжувати навчання та практику після цих п'яти днів.