**День 1: Основи Python і змінні**
- На першому дні ти познайомишся з мовою Python, її особливостями та синтаксисом. Вивчи такі базові поняття: інтерпретатор Python, типи даних (цілі числа, числа з плаваючою комою, рядки, логічні значення), оператор присвоювання та коментарі в коді. Дізнайся, як створювати та змінювати змінні, а також як виводити текст і значення на екран.

Практика:
1. Яке значення буде надруковано після виконання коду?
    ```python
    num = 10
    num = num + 5
    print(num)
    ```
    а) 10  б) 15  в) Error

2. Який тип даних має змінна у наступному коді?
    ```python
    message = "Hello, Python!"
    ```
    а) рядок  б) ціле число  в) логічне значення

3. Який оператор використовується для присвоєння значення змінній?
    а) =  б) ==  в) :=

---

**День 2: Оператори, вирази та функції**
- Сьогодні ти дізнаєшся про арифметичні, порівняння та логічні оператори в Python. Вивчи правила їх використання та порядок операцій. Також познайомся з функціями для роботи з рядками та їх форматування. Дізнайся, як створювати власні функції та як використовувати аргументи і параметри.

Практика:
1. Який результат виконання наступного виразу?
    ```python
    7 + 3 * 4
    ```
    а) 19  б) 25  в) 42

2. Який оператор порівняння використовується для перевірки рівності?
    а) ==  б) =  в) ===

3. Який вихід буде після виконання функції?
    ```python
    def greet(name):
        return "Привіт, " + name + "!"

    print(greet("Саша"))
    ```
    а) Привіт, Саша!  б) Error  в) Нічого не буде надруковано

---

**День 3: Контроль потоку: умовні оператори та цикли**
- На третьому дні ти вивчатимеш умовні оператори (if, elif, else) та їх використання для прийняття рішень у програмі. Дізнайся, як створювати цикли for для ітерації по послідовностях і цикли while для повторення дій доти, доки умова істинна.

Практика:
1. Який рядок буде надруковано після виконання коду?
    ```python
    name = "Саша"
    if name == "Саша":
        print("Привіт, Саша!")
    else:
        print("Я не знаю тебе.")
    ```
    а) Привіт, Саша!  б) Я не знаю тебе.  в) Error

2. Який цикл використовується для ітерації по елементах списку?
    а) while  б) for  в) foreach

3. Яка дія не є допустимою в циклі while?
    а) Збільшення лічильника.
    б) Перевірка умови.
    в) Надрукувати текст.

---

**День 4: Списки, словники та колекції**
- Сьогодні ти познайомишся з різними типами колекцій в Python: списками, словниками та кортежами. Вивчи способи створення, доступу та маніпулювання елементами цих колекцій. Дізнайся про методи списків та словників, такі як append, pop, len тощо.

Практика:
1. Який елемент списку буде надруковано після виконання коду?
    ```python
    fruits = ["яблуко", "банан", "груша"]
    print(fruits[1])
    ```
    а) яблуко  б) банан  в) груша

2. Який метод використовується для додавання елемента в кінець списку?
    а) add()  б) append()  в) insert()

3. Який тип даних представляє словник?
    а) упорядкований  б) незупорядкований  в) ієрархічний

---

**День 5: Модулі, пакети та файли**
- На останньому дні ти дізнаєшся про модулі та пакети в Python, а також про роботу з файлами. Вивчи, як імпортувати та використовувати функції з інших модулів. Дізнайся, як створювати та читати текстові файли, а також як записувати дані в файли.

Практика:
1. Який модуль використовується для роботи з файлами?
    а) os  б) sys  в) io

2. Яка дія не є допустимою для текстового файлу?
    а) Читати вміст файлу.
    б) Додавати дані в середину файлу.
    в) Створити новий файл.

3. Який метод використовується для читання вмісту файлу?
    а) read()  б) write()  в) open()

Ця програма допоможе тобі швидко ознайомитися з основами Python. Не забувай практикувати те, що ти вивчаєш, і поступово переходити до більш складних завдань!